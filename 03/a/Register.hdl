// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/Register.hdl

/**
 * 16-bit register:
 * If load[t] == 1 then out[t+1] = in[t]
 * else out does not change
 */

CHIP Register {
    IN in[16], load;
    OUT out[16];

    PARTS:
    Bit8(in = in[0..7], load = load, out = out[0..7], out = LogLeastSignificantBits);
    Bit8(in = in[8..15], load = load, out = out[8..15], out = LogMostSignificantBits);

    // Naive approach

    // Mux(a = loop0, b = in[0], sel = load, out = NextState0);
    // DFF(in = NextState0, out = loop0, out = out[0]);
    
    // Mux(a = loop1, b = in[1], sel = load, out = NextState1);
    // DFF(in = NextState1, out = loop1, out = out[1]);
    
    // Mux(a = loop2, b = in[2], sel = load, out = NextState2);
    // DFF(in = NextState2, out = loop2, out = out[2]);
    
    // Mux(a = loop3, b = in[3], sel = load, out = NextState3);
    // DFF(in = NextState3, out = loop3, out = out[3]);
    
    // Mux(a = loop4, b = in[4], sel = load, out = NextState4);
    // DFF(in = NextState4, out = loop4, out = out[4]);
    
    // Mux(a = loop5, b = in[5], sel = load, out = NextState5);
    // DFF(in = NextState5, out = loop5, out = out[5]);
    
    // Mux(a = loop6, b = in[6], sel = load, out = NextState6);
    // DFF(in = NextState6, out = loop6, out = out[6]);
    
    // Mux(a = loop7, b = in[7], sel = load, out = NextState7);
    // DFF(in = NextState7, out = loop7, out = out[7]);
    
    // Mux(a = loop8, b = in[8], sel = load, out = NextState8);
    // DFF(in = NextState8, out = loop8, out = out[8]);
    
    // Mux(a = loop9, b = in[9], sel = load, out = NextState9);
    // DFF(in = NextState9, out = loop9, out = out[9]);
    
    // Mux(a = loop10, b = in[10], sel = load, out = NextState10);
    // DFF(in = NextState10, out = loop10, out = out[10]);
    
    // Mux(a = loop11, b = in[11], sel = load, out = NextState11);
    // DFF(in = NextState11, out = loop11, out = out[11]);
    
    // Mux(a = loop12, b = in[12], sel = load, out = NextState12);
    // DFF(in = NextState12, out = loop12, out = out[12]);
    
    // Mux(a = loop13, b = in[13], sel = load, out = NextState13);
    // DFF(in = NextState13, out = loop13, out = out[13]);
    
    // Mux(a = loop14, b = in[14], sel = load, out = NextState14);
    // DFF(in = NextState14, out = loop14, out = out[14]);
    
    // Mux(a = loop15, b = in[15], sel = load, out = NextState15);
    // DFF(in = NextState15, out = loop15, out = out[15]);
}
